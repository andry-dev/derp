<div class="container-fluid" x-data="reviewData">
  <div class="row mt-4">

    <div class="col col-xl-8">
      <p class="h1">Your reviews</p>
    </div>

    <div class="col col-auto">
      <%= link "New Review", to: Routes.review_path(@conn, :new), class: "btn btn-primary" %>
    </div>

    <div class="col col-auto">
      <button class="btn btn-primary" @click="refresh()">Refresh reviews</button>
    </div>
  </div>

  <div class="row">
    <div class="col col-md-12">
      <table class="table table-hover mt-3">
        <thead>
          <tr>
            <th>Product photo</th>
            <th>Title</th>
            <th>Body</th>
            <th>Upvotes</th>
            <th>Downvotes</th>
            <!-- <th>Ipfs hash</th> -->

            <th></th>
          </tr>
        </thead>
        <tbody>

        <template x-for="review in reviews">
          <tr>
            <td x-text="review.title"></td>
            <td x-text="review.body"></td>
          </tr>
        </template>

      <%= for review <- @reviews do %>
          <tr>
            <td><%= review.title %></td>
            <td><%= review.body %></td>
            <td><%= review.id %></td>
            <td><%= review.ipfs_hash %></td>

            <td>
              <span><%= link "Show", to: Routes.review_path(@conn, :show, review) %></span>
              <span><%= link "Edit", to: Routes.review_path(@conn, :edit, review) %></span>
              <span><%= link "Delete", to: Routes.review_path(@conn, :delete, review), method: :delete, data: [confirm: "Are you sure?"] %></span>
            </td>
          </tr>
      <% end %>
        </tbody>
      </table>
    </div>
  </div>

</div>


<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('reviewData', () => ({
            reviews: [ ],

            async refresh() {
              if (!window.contract) {
                await ethEnabled();
              }

              const reviewHashes = await contract.methods.getReviews().call();

              this.reviews = []


              for (hash in reviewHashes) {
                const reviewBody = ipfs.

                this.reviews.push({
                  title: 'xya',
                  body: 'x',
                  upvotes: 1,
                });
              }

              console.log(reviewHashes);
            }
        }))
    })
</script>
