<h1>Your reviews  <span class><i class="fa-solid fa-plus"></i><%= link "New Review", to: Routes.review_path(@conn, :new), class: "btn btn-primary" %></span></h1>

<div x-data="reviewData">
<button class="btn btn-primary" @click="refresh()">Refresh reviews</button>

<table>
  <thead>
    <tr>
      <th>Product photo</th>
      <th>Title</th>
      <th>Body</th>
      <th>Upvotes</th>
      <th>Downvotes</th>
      <!-- <th>Ipfs hash</th> -->

      <th></th>
    </tr>
  </thead>
  <tbody>

  <template x-for="review in reviews">
    <tr>
      <td x-text="review.title"></td>
      <td x-text="review.body"></td>
    </tr>
  </template>

<%= for review <- @reviews do %>
    <tr>
      <td><%= review.title %></td>
      <td><%= review.body %></td>
      <td><%= review.id %></td>
      <td><%= review.ipfs_hash %></td>

      <td>
        <span><%= link "Show", to: Routes.review_path(@conn, :show, review) %></span>
        <span><%= link "Edit", to: Routes.review_path(@conn, :edit, review) %></span>
        <span><%= link "Delete", to: Routes.review_path(@conn, :delete, review), method: :delete, data: [confirm: "Are you sure?"] %></span>
      </td>
    </tr>
<% end %>
  </tbody>
</table>

</div>

<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('reviewData', () => ({
            reviews: [ ],

            <!-- init() { -->
            <!-- }, -->

            async refresh() {
              if (!window.contract) {
                await ethEnabled();
              }

              const reviewHashes = await contract.methods.getReviews().call();

              this.reviews = []


              for (hash in reviewHashes) {
                const reviewBody = ipfs.

                this.reviews.push({
                  title: 'xya',
                  body: 'x',
                  upvotes: 1,
                });
              }

              console.log(reviewHashes);
            }
        }))
    })
</script>
